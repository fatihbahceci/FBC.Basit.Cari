// <auto-generated />
using System;
using FBC.Basit.Cari.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FBC.Basit.Cari.Migrations
{
    [DbContext(typeof(DB))]
    [Migration("20250323231736_CariAktif")]
    partial class CariAktif
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.CariHareket", b =>
                {
                    b.Property<int>("CariHareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aciklama")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Alacak")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Borc")
                        .HasColumnType("TEXT");

                    b.Property<int>("CariKartId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DovizKuruId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EvrakNo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("VadeTarihi")
                        .HasColumnType("TEXT");

                    b.HasKey("CariHareketId");

                    b.HasIndex("CariKartId");

                    b.HasIndex("DovizKuruId");

                    b.ToTable("CariHareket");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.CariKart", b =>
                {
                    b.Property<int>("CariKartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Aktif")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Notlar")
                        .HasColumnType("TEXT");

                    b.HasKey("CariKartId");

                    b.ToTable("CariKart");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.DovizKuru", b =>
                {
                    b.Property<int>("DovizKuruId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DovizAdi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DovizCinsi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GuncelKurAlis")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GuncelKurSatis")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("TEXT");

                    b.HasKey("DovizKuruId");

                    b.HasIndex("DovizCinsi")
                        .IsUnique();

                    b.ToTable("DovizKuru");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.DovizKuruHareket", b =>
                {
                    b.Property<int>("DovizKuruHareketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Alis")
                        .HasColumnType("TEXT");

                    b.Property<int>("DovizKuruId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kaynak")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Satis")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("TEXT");

                    b.HasKey("DovizKuruHareketId");

                    b.HasIndex("DovizKuruId");

                    b.HasIndex("Tarih", "DovizKuruId")
                        .IsUnique();

                    b.ToTable("DovizKuruHareket");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.SysUser", b =>
                {
                    b.Property<int>("SysUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CariKartId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCanEditData")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SysUserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SysUserPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SysUserId");

                    b.HasIndex("CariKartId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.CariHareket", b =>
                {
                    b.HasOne("FBC.Basit.Cari.DBModels.CariKart", "CariKart")
                        .WithMany("Hareketler")
                        .HasForeignKey("CariKartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBC.Basit.Cari.DBModels.DovizKuru", "DovizKuru")
                        .WithMany()
                        .HasForeignKey("DovizKuruId");

                    b.Navigation("CariKart");

                    b.Navigation("DovizKuru");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.DovizKuruHareket", b =>
                {
                    b.HasOne("FBC.Basit.Cari.DBModels.DovizKuru", "DovizKuru")
                        .WithMany()
                        .HasForeignKey("DovizKuruId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DovizKuru");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.SysUser", b =>
                {
                    b.HasOne("FBC.Basit.Cari.DBModels.CariKart", "CariKart")
                        .WithMany()
                        .HasForeignKey("CariKartId");

                    b.Navigation("CariKart");
                });

            modelBuilder.Entity("FBC.Basit.Cari.DBModels.CariKart", b =>
                {
                    b.Navigation("Hareketler");
                });
#pragma warning restore 612, 618
        }
    }
}
