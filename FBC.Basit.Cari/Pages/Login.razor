@using FBC.Basit.Cari.Auth
@attribute [AllowAnonymous]
@inject AuthenticationStateProvider mgr
@inject NavigationManager Navi

@page "/Login"
<div class=row>

    <div class="container px-5 my-5">
        <TextBox @bind-Data="userName" Title="Kullanıcı Adı" />
        <TextBox @bind-Data="password" Title="Parola" IsPassword="true" />
        @if (!trying)
        {
            <div class="d-grid">
                <button class="btn btn-primary btn-lg" id="submitButton" @onclick="TryLogin">Giriş</button>
            </div>
        }
    </div>
    @if (!string.IsNullOrEmpty(loginMessage))
    {
        <div class="alert alert-danger" role="alert">
            @loginMessage
        </div>
    }
</div>

@code {

    string userName;
    string password;
    string loginMessage;
    bool trying = false;


    void TryLogin()
    {

        try
        {
            trying = true;
            InvokeAsync(() => StateHasChanged());
            if ((mgr as FBCSessionedAuthenticationStateProvider).Login(userName, password))
            {
                Navi.NavigateTo("/");
            }
            else
            {
                loginMessage = "Geçersiz kullanıcı adı veya parola";
            }
        }
        catch (Exception exc)
        {
            loginMessage = "Hata: " + exc.Message;
        }
        finally
        {
            trying = false;
            InvokeAsync(() => StateHasChanged());

        }
    }
}
